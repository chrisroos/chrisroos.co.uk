---
blog_post: true
guid: 92474f38-31b4-4247-bc47-af786b4577bb
title: Testing my mod_rewrite configuration with ruby
filter: haml
created_at: 2008-01-16 09:31:00 +00:00
layout: blog
---
:textile
  In order to ensure that I didn't break anything while setting up my "mod_rewrite rules":/blog/2008-01-16-chris-1-mod_rewrite-0-muhahahaha I created a little "ruby script":http://chrisroos.googlecode.com/svn/trunk/the-local-paper/apache_test.rb to test my expectations.  I've cut down the rules in the example below but you should get the idea.  It'd be quite cool to create a little dsl to better express the intentions of the code.

  <pre class="code ruby">
  require 'net/http'

  expectations = {
    # Redirect www. to .
    'http://www.the-local-paper.co.uk/' => {
      :url => 'http://the-local-paper.co.uk/', :code => '301'
    },
    # Requests for the-local-paper.co.uk should return a 200 (OK) response
    'http://the-local-paper.co.uk/' => {
      :code => '200'
    }
  }

  expectations.each do |request_url, expected_attributes|
    puts "Requesting: \#{request_url}"

    url = URI.parse(request_url)
    request = Net::HTTP::Get.new(url.path)
    response = Net::HTTP.start(url.host, url.port) do |http|
      http.request(request)
    end

    if redirection_url = expected_attributes[:url]
      raise "Expected '\#{redirection_url}' in the Location header but got '\#{response['Location']}'." unless redirection_url == response['Location']
    end
    if status_code = expected_attributes[:code]
      raise "Expected status code of (\#{status_code}) but got (\#{response.code})." unless status_code == response.code
    end
  end
  </pre>
