---
summary:    A fairly simple example of how to sign AWS requests, with Ruby, using version 2 of the signature spec.
blog_post:  true
title:      Implementing Version 2 of the Amazon AWS HTTP Request Signature in Ruby
created_at: 2009-01-31 18:46:39.799577 +00:00
guid:       d3ec8873-65d1-4536-872d-b164016b7dfc
layout:     blog
filter:     markdown
---
This took me a long time to work out this afternoon so I guess it might be useful to others. I couldn't find an implementation (of version 2 of the request signing) in any of the existing Amazon AWS libraries and although I did find a promising looking post [here](http://www.jamesmurty.com/2008/12/31/aws-query-signature-version-2/) it just didn't work for me. I ended up using the [Simple DB PHP sample code](http://developer.amazonwebservices.com/connect/entry.jspa?externalID=1135) to obtain some test data<sup class="footnote" id="fnr1"><a href="#fn1">1</a></sup> that I could use to debug my own code<sup class="footnote" id="fnr2"><a href="#fn2">2</a></sup> and eventually got it working.

<p class="footnote" id="fn1">

<a href="#fnr1"><sup>1</sup></a> I plan to post some test data (to help others attempting to write a client) in a follow up post.

</p>
<p class="footnote" id="fn2">

<a href="#fnr2"><sup>2</sup></a> I printed the parameters and signature at various stages of the request so that I could compare it to the output from my client.

</p>

    require 'rubygems'
    require 'cgi'
    require 'time'
    require 'hmac'
    require 'hmac-sha2'
    require 'base64'

    ACCESS_IDENTIFIER = 'your-access-identifier'
    SECRET_IDENTIFIER = 'your-secret-identifier'

    AMAZON_ENDPOINT = 'https://sdb.amazonaws.com/'

    params = {
      'Action' => 'ListDomains',
      'AWSAccessKeyId' => ACCESS_IDENTIFIER,
      'SignatureMethod' => 'HmacSHA256',
      'SignatureVersion' => 2,
      'Timestamp' => Time.now.iso8601,
      'Version' => '2007-11-07'
    }

    canonical_querystring = params.sort.collect { |key, value| [CGI.escape(key.to_s), CGI.escape(value.to_s)].join('=') }.join('&')
    string_to_sign = "GET
    sdb.amazonaws.com
    /
    \#{canonical_querystring}"

    hmac = HMAC::SHA256.new(SECRET_IDENTIFIER)
    hmac.update(string_to_sign)
    signature = Base64.encode64(hmac.digest).chomp # chomp is important!  the base64 encoded version will have a newline at the end

    params['Signature'] = signature
    querystring = params.collect { |key, value| [CGI.escape(key.to_s), CGI.escape(value.to_s)].join('=') }.join('&') # order doesn't matter for the actual request

    puts `curl -X"GET" "\#{AMAZON_ENDPOINT}?\#{querystring}" -A"simple ruby aws sdb wrapper"`
